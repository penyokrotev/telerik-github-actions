name: Practice
env:
  WORKSPACE_ENVIRONMENT_VARIABLE: 'custom workspace environment variable'
on: [push]
jobs:
  pre-build:
    env:
      JOB_ENVIRONMENT_VARIABLE: 'custom job environment variable for ubuntu'
    runs-on: ubuntu-latest
    steps:
    - name: Pre-build
      env:
        STEP_ENVIRONMENT_VARIABLE: 'custom step environment variable for bash'
      run: |
        echo "$WORKSPACE_ENVIRONMENT_VARIABLE"
        echo "$JOB_ENVIRONMENT_VARIABLE"
        echo "$STEP_ENVIRONMENT_VARIABLE"
        echo "${{ secrets.PASSWORD }}"
  lint:
    needs: pre-build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo code
      uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint
    - name: Lint with pylint
      continue-on-error: true
      run: |
        python lint_test.py
  style:
    needs: pre-build
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        python: [2.7, 3.8, 3.9]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Check out repository code
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}
    - name: Install dependencies
      run: |
        python --version
        python -m pip install --upgrade pip
        pip install pycodestyle
    - name: Style with pycodestyle
      run: |
        python --version
        pycodestyle *.py
  build:
    needs: [ lint, style ]
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository code
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Run following commands
      run: |
        ls -a
        pwd
        hostname
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: factorial.py
        path: .
  unit-test:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository code
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Unit testing
      run: |
        python3 -m doctest factorial.py
  sonarcloud:
    needs: unit-test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  database-integration:
    needs: unit-test
    runs-on: ubuntu-latest
    container: node:10.18-jessie
    services:
      postgres:
        image: postgres
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Connect to PostgreSQL
        run: python --version #validate_db.py
        env:
          POSTGRES_HOST: postgres
          POSTGRES_PORT: 5432
  deploy:
    needs: database-integration
    runs-on: ubuntu-latest
    steps:
    - run: echo "Deploy to prod"


      
   
          

