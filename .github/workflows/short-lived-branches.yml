name: Shortlived branches
env:
  WORKSPACE_ENVIRONMENT_VARIABLE: 'custom workspace environment variable'
on:
  push:
    branches:
      - '*bugfix/**'
      - '*feature/**'

jobs:
  pre-build:
    env:
      JOB_ENVIRONMENT_VARIABLE: 'custom job environment variable for ubuntu'
    runs-on: ubuntu-latest
    steps:
    - name: Pre-build
      env:
        STEP_ENVIRONMENT_VARIABLE: 'custom step environment variable for bash'
      run: |
        echo "$WORKSPACE_ENVIRONMENT_VARIABLE"
        echo "$JOB_ENVIRONMENT_VARIABLE"
        echo "$STEP_ENVIRONMENT_VARIABLE"
        echo "${{ secrets.PASSWORD }}"
        
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: factorial.py
        path: .

  sonarcloud:
    needs: pre-build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        
  snyk:
    needs: pre-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python-3.8@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high
    
  database-integration:
    needs: snyk
    runs-on: ubuntu-latest
    container: node:10.18-jessie
    services:
      postgres:
        image: postgres
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Connect to PostgreSQL
        run: python --version #validate_db.py
        env:
          POSTGRES_HOST: postgres
          POSTGRES_PORT: 5432
          
    
  notification_without_optional_params:
    needs: deploy-prod
    name: One with little info
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@master
      - name: Microsoft Teams Notification
        uses: skitionek/notify-microsoft-teams@master
        if: always()
        with:
          webhook_url: ${{ secrets.MSTEAMS_WEBHOOK }}
